% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_multiple_response.R
\name{generate_multiple_response}
\alias{generate_multiple_response}
\title{Generate summary table from a multiple response category}
\usage{
generate_multiple_response(
  .data,
  x,
  ...,
  y = NULL,
  x_group = NULL,
  x_label = get_config("x_label"),
  x_as_group = FALSE,
  y_group_separator = ">",
  group_values_by = "statistics",
  value_to_count = 1,
  include_frequency = TRUE,
  include_proportion = TRUE,
  convert_to_percent = TRUE,
  format_precision = 2,
  total_label = NULL,
  recode = TRUE,
  clean_name = TRUE
)
}
\arguments{
\item{.data}{A .data frame, .data frame extension (e.g. a tibble), a lazy .data frame (e.g. from dbplyr or dtplyr), or Arrow .data format.}

\item{x}{\strong{Required}. Row variable to be used as categories.}

\item{...}{tidyselect columns}

\item{y}{Column variable to specify for a letter-coded response.}

\item{x_group}{Column grouping variable/s.}

\item{x_label}{Stubhead label (first column).}

\item{x_as_group}{Use row variable as grouping.}

\item{y_group_separator}{Column separator that defines the table hierarchy.}

\item{group_values_by}{Whether to group column variables by \code{statistics} or \code{indicators}.}

\item{value_to_count}{Value used as basis for counting the frequencies.}

\item{include_frequency}{Whether to include frequency columns.}

\item{include_proportion}{Whether to include proportion/percentage columns.}

\item{convert_to_percent}{Whether to format to \code{percent} or \code{proportion}.}

\item{format_precision}{Specify the precision of rounding the percent or proportion. Default is \code{2}.}

\item{recode}{Whether to recode the variable name first.}

\item{clean_name}{}
}
\value{
Returns a cross-table of type \code{tibble}
}
\description{
Generate summary table from a multiple response category
}
\examples{

df <- data.frame(
   category = c("G1", "G1", "G2", "G1", "G2", "G1"),
   response = c("AB", "AC", "B", "ABC", "AB", "C"),
   A = c(1, 1, 0, 1, 1, 0),
   B = c(1, 0, 1, 1, 1, 0),
   C = c(0, 1, 0, 1, 0, 1)
 )
}
